# 워크플로우의 이름
name: 🤖 Auto Branch Creator with Labels

# 실행 조건: 이슈가 생성되거나, 라벨이 붙었을 때 실행
on:
  issues:
    types: [opened, labeled]

# 실행할 작업들
jobs:
  create_branch_job:
    runs-on: ubuntu-latest
    steps:
      # 1. 이슈의 라벨을 기반으로 브랜치 접두사(prefix) 결정
      - name: Get branch prefix from label
        id: get_prefix
        run: |
          # 기본 접두사는 'feat'으로 설정
          PREFIX="feat"
          
          # 이슈에 라벨이 있는지 확인하고, 첫 번째 라벨 이름을 가져옴
          LABEL_NAME=$(jq -r '.issue.labels[0].name' "$GITHUB_EVENT_PATH")

          # 라벨 이름에 따라 접두사 변경
          case "$LABEL_NAME" in
            "🐞 bug") PREFIX="fix" ;;
            "✨ feature") PREFIX="feat" ;;
            "🔨 refactor") PREFIX="refactor" ;;
            "🚀 performance") PREFIX="performance" ;;
          esac
          
          echo "prefix=$PREFIX" >> $GITHUB_OUTPUT

      # 2. 이슈 정보와 접두사를 조합하여 최종 브랜치 이름 형식 만들기
      - name: Format branch name
        id: format_branch_name
        run: |
          # 위 단계에서 결정된 접두사를 가져옴
          branch_prefix="${{ steps.get_prefix.outputs.prefix }}"
          
          # 이슈 제목을 브랜치 이름에 맞게 변환 (소문자, 공백/특수문자 -> 하이픈)
          branch_title=$(echo "${{ github.event.issue.title }}" | iconv -t ascii//TRANSLIT | sed -r 's/[^a-zA-Z0-9]+/-/g' | sed -r 's/^-+\|-+$//g' | tr 'A-Z' 'a-z')
          
          # 최종 브랜치 이름 조합
          echo "branch=${branch_prefix}/${{ github.event.issue.number }}-${branch_title}" >> $GITHUB_OUTPUT

      # 3. 만든 브랜치 이름으로 실제 브랜치 생성
      - name: Create branch
        uses: actions/checkout@v4
        with:
          create-branch: true
          branch: ${{ steps.format_branch_name.outputs.branch }}
      
      # 4. 이슈에 브랜치가 생성되었음을 댓글로 알림
      - name: Post comment to issue
        # 이슈가 '생성'될 때만 댓글을 작성하여 라벨 변경 시 중복 알림 방지
        if: github.event.action == 'opened'
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            ✅ 이 이슈와 연결된 브랜치가 자동으로 생성되었습니다.
            
            **브랜치:** `${{ steps.format_branch_name.outputs.branch }}`
